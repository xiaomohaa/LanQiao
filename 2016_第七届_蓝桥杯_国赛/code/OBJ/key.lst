C51 COMPILER V9.59.0.0   KEY                                                               03/16/2019 14:13:31 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN ..\OBJ\key.obj
COMPILER INVOKED BY: F:\Keil_v5\C51\BIN\C51.EXE ..\HARDWARE\key.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\INC) DEBUG OB
                    -JECTEXTEND PRINT(..\OBJ\key.lst) TABS(2) OBJECT(..\OBJ\key.obj)

line level    source

   1          #include "sys.h"
   2          
   3          sbit KeyOut1 = P4^4;
   4          sbit KeyOut2 = P4^2;
   5          sbit KeyOut3 = P3^5;
   6          sbit KeyOut4 = P3^4;
   7          sbit KeyIn1 = P3^0;
   8          sbit KeyIn2 = P3^1;
   9          sbit KeyIn3 = P3^2;
  10          sbit KeyIn4 = P3^3;
  11          
  12          unsigned char code KeyMap[4][4] = {{0x01, 0x02, 0x00, 0x00}, 
  13                                             {0x03, 0x04, 0x00, 0x00}, 
  14                                             {0x05, 0x06, 0x00, 0x00}, 
  15                                             {0x07, 0x08, 0x00, 0x00}};
  16          unsigned char KeyBuff[4][4] = {{0xff, 0xff, 0xff, 0xff},
  17                                         {0xff, 0xff, 0xff, 0xff}, 
  18                                         {0xff, 0xff, 0xff, 0xff}, 
  19                                         {0xff, 0xff, 0xff, 0xff}};
  20          unsigned char KeySta[4][4] = {{1,1,1,1},{1,1,1,1},{1,1,1,1},{1,1,1,1}};
  21          unsigned char KeyBackup[4][4] = {{1,1,1,1}, {1,1,1,1}, {1,1,1,1}, {1,1,1,1}};
  22            
  23          void KeyScan(void)
  24          {
  25   1        static u8 index = 0;
  26   1        u8 i;
  27   1        
  28   1        KeyBuff[0][index] = (KeyBuff[0][index] << 1) | KeyIn1;
  29   1        KeyBuff[1][index] = (KeyBuff[1][index] << 1) | KeyIn2;
  30   1        KeyBuff[2][index] = (KeyBuff[2][index] << 1) | KeyIn3;
  31   1        KeyBuff[3][index] = (KeyBuff[3][index] << 1) | KeyIn4;
  32   1        
  33   1        for(i = 0; i < 4; i ++)
  34   1        {
  35   2          if((KeyBuff[i][index] & 0x0f) == 0x00)
  36   2            KeySta[i][index] = 0;
  37   2          else if((KeyBuff[i][index] & 0x0f) == 0x0f)
  38   2            KeySta[i][index] = 1; 
  39   2        }
  40   1        
  41   1        index ++;
  42   1        index &= 0x03;
  43   1        switch(index)
  44   1        {
  45   2          case 0: KeyOut4 = 1; KeyOut1 = 0; break;
  46   2          case 1: KeyOut1 = 1; KeyOut2 = 0; break;
  47   2          case 2: KeyOut2 = 1; KeyOut3 = 0; break;
  48   2          case 3: KeyOut3 = 1; KeyOut4 = 0; break;
  49   2        }
  50   1      }
  51          
  52          void KeyAction(unsigned char keycode)
  53          {
  54   1        if(keycode == 0x01)   //S7    显示时钟
C51 COMPILER V9.59.0.0   KEY                                                               03/16/2019 14:13:31 PAGE 2   

  55   1        {
  56   2          mode = 1;
  57   2          mode_time = 0;
  58   2          if(flag_readtime == 0)
  59   2          {
  60   3            flag_readtime = 1;
  61   3            if(flag_change == 1)    //如果没有修改时间就显示实时时间
  62   3            {
  63   4              Realtime[3] = Backuptime[3]; 
  64   4              Realtime[4] = Backuptime[4]; 
  65   4              Realtime[5] = Backuptime[5];
  66   4            }
  67   3            SetRealTime(Realtime);
  68   3            flag_change = 0;
  69   3          }
  70   2        }
  71   1        else if(keycode == 0x03)    //S6  电压测量
  72   1        {
  73   2          mode = 2;
  74   2          mode_val = 0;
  75   2        }
  76   1        else if(keycode == 0x02)    //S11 加
  77   1        {
  78   2          if(mode == 1)     //时间
  79   2          {
  80   3            if(mode_time > 0)
  81   3            {
  82   4              Backuptime[mode_time + 2] ++;
  83   4              
  84   4              if(mode_time == 1)
  85   4              {
  86   5                if((Backuptime[mode_time + 2] & 0x0f) > 9)  //个位大于9
  87   5                  Backuptime[mode_time + 2] += 6;           //加6修正
  88   5                if(Backuptime[mode_time + 2] >= 0x24)       //时钟上限
  89   5                  Backuptime[mode_time + 2] = 0x00;
  90   5              }
  91   4              else
  92   4              {       
  93   5                if((Backuptime[mode_time + 2] & 0x0f) > 9)  //个位大于9
  94   5                  Backuptime[mode_time + 2] += 6;           //加6修正
  95   5                if(Backuptime[mode_time + 2] >= 0x60)       //分秒上限
  96   5                  Backuptime[mode_time + 2] = 0x00;         
  97   5              }
  98   4              
  99   4              flag_change = 1;
 100   4            }
 101   3          }
 102   2          else if(mode == 2)    //电压
 103   2          {
 104   3            if(mode_val > 0)
 105   3            {
 106   4              Real_val[mode_val] += 5;
 107   4              if(Real_val[mode_val] >= 50)
 108   4                Real_val[mode_val] = 50;
 109   4              if(Real_val[2] >= Real_val[1])
 110   4                Real_val[2] = Real_val[1];
 111   4              
 112   4              Write_E2PROM(mode_val, Real_val[mode_val]);
 113   4            }
 114   3          }
 115   2        }
 116   1        else if(keycode == 0x04)    //S10 减
C51 COMPILER V9.59.0.0   KEY                                                               03/16/2019 14:13:31 PAGE 3   

 117   1        {
 118   2          if(mode == 1)     //时间
 119   2          {
 120   3            if(mode_time > 0)
 121   3            {
 122   4              if(((Backuptime[mode_time + 2] & 0x0f) == 0) && (Backuptime[mode_time + 2] > 0))
 123   4                Backuptime[mode_time + 2] -= 6;
 124   4              else if(Backuptime[mode_time + 2] == 0x00)
 125   4              {
 126   5                if(mode_time == 1)
 127   5                  Backuptime[mode_time + 2] = 0x23;
 128   5                else
 129   5                  Backuptime[mode_time + 2] = 0x59;
 130   5              }
 131   4              else
 132   4                Backuptime[mode_time + 2] --;
 133   4              
 134   4              flag_change = 1;
 135   4            }
 136   3          }
 137   2          else if(mode == 2)    //电压
 138   2          {
 139   3            if(mode_val > 0)
 140   3            {
 141   4              if(Real_val[mode_val] >= 5)
 142   4                Real_val[mode_val] -= 5;
 143   4              else
 144   4                Real_val[mode_val] = 0;
 145   4              
 146   4              if(Real_val[1] <= Real_val[2])
 147   4                Real_val[1] = Real_val[2];
 148   4              
 149   4              Write_E2PROM(mode_val, Real_val[mode_val]);
 150   4            }
 151   3          }
 152   2        }
 153   1        else if(keycode == 0x05)    //S5    频率测量
 154   1        {
 155   2          mode = 4;
 156   2          flag_fretext = 1;
 157   2          mode_fre = 1;
 158   2        }
 159   1        else if(keycode == 0x06)    //S9    查询
 160   1        {
 161   2          mode = 3;
 162   2          flag_valtext = 0;
 163   2        }
 164   1        else if(keycode == 0x07)    //S4
 165   1        {
 166   2          if(mode == 1)   //时间
 167   2          {
 168   3            flag_readtime = 0;
 169   3            mode_time ++;
 170   3            if(mode_time > 3)
 171   3              mode_time = 1;
 172   3          }
 173   2          else if(mode == 2)    //电压
 174   2          {
 175   3            mode_time = 0;
 176   3            mode_val ++;
 177   3            if(mode_val >= 3)
 178   3              mode_val = 1;
C51 COMPILER V9.59.0.0   KEY                                                               03/16/2019 14:13:31 PAGE 4   

 179   3          }
 180   2          else if(mode == 4)    //频率
 181   2          {
 182   3            mode_fre ++;
 183   3            if(mode_fre > 2)
 184   3              mode_fre = 1;
 185   3          }
 186   2        }
 187   1        
 188   1        if(mode != 3)
 189   1          flag_valtext = 1;
 190   1        if(mode != 4)
 191   1          flag_fretext = 1;
 192   1      }
 193          
 194          void KeyPress(void)
 195          {
 196   1        u8 i, j;
 197   1        
 198   1        for(i = 0; i < 4; i ++)
 199   1        {
 200   2          for(j = 0; j < 4; j ++)
 201   2          {
 202   3            if(KeyBackup[i][j] != KeySta[i][j])
 203   3            {
 204   4              if(KeySta[i][j] == 0)
 205   4                KeyAction(KeyMap[i][j]);
 206   4              KeyBackup[i][j] = KeySta[i][j];
 207   4            }
 208   3          }
 209   2        }
 210   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1339    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =     49       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
