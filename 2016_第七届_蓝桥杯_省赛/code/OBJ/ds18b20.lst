C51 COMPILER V9.59.0.0   DS18B20                                                           03/06/2019 13:25:45 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN ..\OBJ\ds18b20.obj
COMPILER INVOKED BY: F:\Keil_v5\C51\BIN\C51.EXE ..\HARDWARE\ds18b20.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\INC) DEBUG OBJE
                    -CTEXTEND PRINT(..\OBJ\ds18b20.lst) TABS(2) OBJECT(..\OBJ\ds18b20.obj)

line level    source

   1           #include "sys.h"
   2          
   3          sbit DS18B20_IO = P1^4;
   4          
   5          /*******************************************************************************
   6          * 函数名  ：Delayus
   7          * 输入值  ：unsigned int us
   8          * 返回值  ：none
   9          * 作者    ：小默haa
  10          * 时间    ：2019年2月17日
  11          * 功能描述：1T单片机延时指定us
  12          * 备注    ：最大形参65535，即最大延时65ms
  13          *******************************************************************************/
  14          void Delayus(unsigned int us)
  15          {
  16   1        do{
  17   2          _nop_();
  18   2          _nop_();
  19   2          _nop_();
  20   2          _nop_();
  21   2          _nop_();
  22   2          _nop_();
  23   2          _nop_();
  24   2          _nop_();
  25   2        }while(--us);
  26   1      }
  27          
  28          /*******************************************************************************
  29          * 函数名  ：Get18B20Ack
  30          * 输入值  ：none
  31          * 返回值  ：none
  32          * 作者    ：小默haa
  33          * 时间    ：2019年2月27日
  34          * 功能描述：复位总线，获取18B20存在脉冲，以启动一次读写操作
  35          * 备注    ：
  36          *******************************************************************************/
  37          bit Get18B20Ack(void)
  38          {
  39   1        bit ack;
  40   1        
  41   1        DS18B20_IO = 0;     //产生500us的复位脉冲
  42   1        Delayus(500);
  43   1        DS18B20_IO = 1;     //延时60us
  44   1      //  EA = 0;             //禁止总中断
  45   1        ET0 = 0;
  46   1        Delayus(60);
  47   1        ack = DS18B20_IO;   //读取存在脉冲
  48   1        while(!DS18B20_IO); //等待存在脉冲结束
  49   1        
  50   1      //  EA = 1;             //重新使能总中断
  51   1        ET0 = 1;
  52   1        
  53   1        return ack;   
  54   1      }
C51 COMPILER V9.59.0.0   DS18B20                                                           03/06/2019 13:25:45 PAGE 2   

  55          
  56          /*******************************************************************************
  57          * 函数名  ：DS18B20Write
  58          * 输入值  ：unsigned char dat
  59          * 返回值  ：none
  60          * 作者    ：小默haa
  61          * 时间    ：2019年2月27日
  62          * 功能描述：向18B20写入一个字节
  63          * 备注    ：dat为待写入字节
  64          *******************************************************************************/
  65          void DS18B20Write(unsigned char dat)
  66          {
  67   1        unsigned char mask;
  68   1                  
  69   1        for(mask = 0x01; mask != 0; mask <<= 1) //低位在先，依次移出8个bit
  70   1        {
  71   2      //    EA = 0;
  72   2          ET0 = 0;
  73   2          DS18B20_IO = 0;       //产生2us低电平脉冲
  74   2          Delayus(2);
  75   2          if(dat & mask)        //输出该bit值
  76   2            DS18B20_IO = 1;
  77   2          else
  78   2            DS18B20_IO = 0;
  79   2      //    EA = 1;
  80   2          ET0 = 1;
  81   2          Delayus(60);          //延时60us
  82   2          DS18B20_IO = 1;       //拉高通信引脚
  83   2        }
  84   1      }
  85          
  86          /*******************************************************************************
  87          * 函数名  ：DS18B20Read
  88          * 输入值  ：none
  89          * 返回值  ：unsigend char dat
  90          * 作者    ：小默haa
  91          * 时间    ：2019年2月27日
  92          * 功能描述：从18B20读取一个字节
  93          * 备注    ：返回值为读取到的字节
  94          *******************************************************************************/
  95          unsigned char DS18B20Read(void)
  96          {
  97   1        unsigned char mask, dat = 0;
  98   1        
  99   1        for(mask = 0x01; mask != 0; mask <<= 1) //低位在先，依次采集8个bit
 100   1        {
 101   2      //    EA = 0;
 102   2          ET0 = 0;
 103   2          DS18B20_IO = 0;       //产生2us低电平脉冲
 104   2          Delayus(2);
 105   2          DS18B20_IO = 1;       //结束低电平脉冲，等待18B20输出数据
 106   2          Delayus(2);           //延时2us
 107   2      
 108   2          if(DS18B20_IO)        //读取通信引脚上的值
 109   2            dat |= mask;
 110   2      //    EA = 1;
 111   2          ET0 = 1;
 112   2          Delayus(60);          //再延时60us
 113   2        }
 114   1        
 115   1        return dat; 
 116   1      }
C51 COMPILER V9.59.0.0   DS18B20                                                           03/06/2019 13:25:45 PAGE 3   

 117          
 118          /*******************************************************************************
 119          * 函数名  ：Start18B20
 120          * 输入值  ：none
 121          * 返回值  ：bit ~ack
 122          * 作者    ：小默haa
 123          * 时间    ：2019年2月27日
 124          * 功能描述：启动一次18B20温度转换
 125          * 备注    ：返回值为是否启动成功
 126          *******************************************************************************/
 127          bit Start18B20()
 128          {
 129   1        bit ack;
 130   1        static bit flag = 1;
 131   1      
 132   1        ack = Get18B20Ack();    //执行总线复位，并获取18B20应答
 133   1        if(ack == 0)            //如18B20正确应答，则启动一次转换
 134   1        {
 135   2          DS18B20Write(0xCC);   //跳过ROM操作
 136   2          
 137   2          if(flag)
 138   2          {
 139   3            flag = 0;
 140   3            DS18B20Write(0x4e);     //写暂存器指令4E
 141   3            DS18B20Write(0x4b);     //写高速缓存器TH高温限值75度
 142   3            DS18B20Write(0x00);     //写高速缓存器TL低温限值0度
 143   3            DS18B20Write(0x1f);     //写配置寄存器4
 144   3                                    //0x1f ： 0.5000°C  转换时间93.75ms
 145   3                                    //0x3f ： 0.2000°C  转换时间187.5ms
 146   3                                    //0x5f ： 0.1250°C  转换时间375ms
 147   3                                    //0x7f ： 0.0625°C  转换时间750ms
 148   3          }
 149   2          
 150   2          ack = Get18B20Ack();    //执行总线复位，并获取18B20应答
 151   2          if(ack == 0)            //如18B20正确应答，则启动一次转换
 152   2          {
 153   3            DS18B20Write(0xCC);   //跳过ROM操作
 154   3            DS18B20Write(0x44);   //启动一次温度转换
 155   3          }
 156   2        }
 157   1      
 158   1        return ~ack;            //ack == 0 表示操作成功，所以返回值对其取反
 159   1      }
 160          
 161          /*******************************************************************************
 162          * 函数名  ：Get18B20Temp
 163          * 输入值  ：int *temp
 164          * 返回值  ：bit ~ack
 165          * 作者    ：小默haa
 166          * 时间    ：2019年2月27日
 167          * 功能描述：读取18B20转换的温度值
 168          * 备注    ：返回值为是否读取成功
 169          *******************************************************************************/
 170          bit Get18B20Temp(int *temp)
 171          {
 172   1        bit ack;
 173   1        unsigned char LSB, MSB;     //16bit温度值的低字节和高字节
 174   1      
 175   1        ack = Get18B20Ack();        //执行总线复位，并获取18B20应答
 176   1        if(ack == 0)                //如18B20正确应答，则读取温度值
 177   1        {
 178   2          DS18B20Write(0xCC);       //跳过ROM操作
C51 COMPILER V9.59.0.0   DS18B20                                                           03/06/2019 13:25:45 PAGE 4   

 179   2          DS18B20Write(0xBE);       //发送读命令
 180   2          LSB = DS18B20Read();      //读温度值的低字节
 181   2          MSB = DS18B20Read();      //读温度值的高字节
 182   2          *temp = ( MSB << 8) + LSB;  //合成16bit的整数
 183   2        }
 184   1      
 185   1        return ~ack;                //ack == 0 表示操作应答，所以返回值为1其取反值
 186   1      } 
 187          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    240    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       3
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
