C51 COMPILER V9.59.0.0   MAIN                                                              05/10/2019 00:57:55 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\OBJ\main.obj
COMPILER INVOKED BY: F:\Keil_v5\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\INC) DEBUG OBJECTEXTEND 
                    -PRINT(..\OBJ\main.lst) TABS(2) OBJECT(..\OBJ\main.obj)

line level    source

   1          #include <stc15.h>
   2          #include "sys.h"
   3          
   4          bit flag_5ms = 0, flag_200ms = 0, flag_500ms = 0, flag_1s = 0;
   5          bit flag_keep = 0;
   6          bit flag_HShow = 0;
   7          bit flag_S6_Press = 0, flag_S6_LongPress = 0;
   8          u8 mode = 3;
   9          u16 Fre = 0, Temper_int = 0, Temper_dec = 0;
  10          u16 H_Fre = 0, H_Temper_int = 0, H_Temper_dec = 0;
  11          u8 Vol = 0, VTH = 20;
  12          u8 H_Vol = 0;
  13          u16 counter = 0;
  14          
  15          void main(void)
  16          {
  17   1        static u8 E2_index = 1;
  18   1        
  19   1        AllInit();
  20   1        Check_data();
  21   1        init_ds18b20();
  22   1        Trans_temper();
  23   1        Timer0Init();
  24   1        Timer1Init();
  25   1        
  26   1        EA = 1;
  27   1        while(1)
  28   1        {
  29   2          //RB2电压测量程序
  30   2          if(flag_200ms)      //200ms测量一次电压
  31   2          {
  32   3            flag_200ms = 0;
  33   3            Vol = Read_AIN(0x03);   //读取RB2电压
  34   3          }
  35   2          
  36   2          //频率测量程序
  37   2          if(flag_500ms)
  38   2          {
  39   3            flag_500ms = 0;
  40   3            TR0 = 0;    //关闭定时器0
  41   3            counter = TH0 * 256 + TL0;
  42   3            Fre = counter * 2;
  43   3            TH0 = TL0 = 0;
  44   3            TR0 = 1;
  45   3          }
  46   2          
  47   2          //温度测量程序
  48   2          if(flag_1s)
  49   2          {
  50   3            flag_1s = 0;
  51   3            Temper_int = Gettemper();
  52   3            Temper_dec = Temper_int & 0xf;    //分离小数部分
  53   3            Temper_dec = Temper_dec * ((10000 / 16) / 100);
  54   3            Temper_int = Temper_int >> 4;     //分离整数部分
C51 COMPILER V9.59.0.0   MAIN                                                              05/10/2019 00:57:55 PAGE 2   

  55   3            
  56   3            Trans_temper();               //启动下一次温度转换
  57   3          }
  58   2          
  59   2          //数据保存程序
  60   2          if(flag_keep)
  61   2          {
  62   3            if(flag_5ms)
  63   3            {
  64   4              flag_5ms = 0;
  65   4              switch(E2_index)
  66   4              {
  67   5                case 1: Write_E2PROM(0x00, 0x16); break;    //写入标志
  68   5                case 2: Write_E2PROM(0x01, H_Fre >> 8); break;          //写入频率的高八位
  69   5                case 3: Write_E2PROM(0x02, H_Fre & 0xff); break;        //写入频率的低八位
  70   5                case 4: Write_E2PROM(0x03, H_Temper_int >> 8); break;   //写入温度整数部分高八位
  71   5                case 5: Write_E2PROM(0x04, H_Temper_int & 0xff); break; //写入温度整数部分低八位
  72   5                case 6: Write_E2PROM(0x05, H_Temper_dec >> 8); break;   //写入温度小数部分高八位
  73   5                case 7: Write_E2PROM(0x06, H_Temper_dec & 0xff); break; //写入温度小数部分低八位
  74   5                case 8: Write_E2PROM(0x07, H_Vol); E2_index = 0; flag_keep = 0; break;  //写入电压值并结束写E2PROM
  75   5              }
  76   4              E2_index ++;
  77   4            }
  78   3          }
  79   2          
  80   2          KeyPress();
  81   2        }
  82   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    324    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     19    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      8    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
