C51 COMPILER V9.59.0.0   IIC                                                               03/29/2019 21:35:00 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN .\Objects\iic.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE iic.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\iic.l
                    -st) TABS(2) OBJECT(.\Objects\iic.obj)

line level    source

   1          #include "sys.h"
   2          
   3          #define somenop {_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_
             -nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_
             -nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();}    
   4          
   5          sbit SDA = P2^1;  /* 数据线 */
   6          sbit SCL = P2^0;  /* 时钟线 */
   7          
   8          void IIC_Start(void)
   9          {
  10   1        SDA = 1;
  11   1        SCL = 1;
  12   1        somenop;
  13   1        SDA = 0;
  14   1        somenop;
  15   1        SCL = 0;  
  16   1      }
  17          
  18          void IIC_Stop(void)
  19          {
  20   1        SDA = 0;
  21   1        SCL = 1;
  22   1        somenop;
  23   1        SDA = 1;
  24   1      }
  25          
  26          void IIC_Ack(bit ackbit)
  27          {
  28   1        if(ackbit) 
  29   1        { 
  30   2          SDA = 0;
  31   2        }
  32   1        else 
  33   1        {
  34   2          SDA = 1;
  35   2        }
  36   1        somenop;
  37   1        SCL = 1;
  38   1        somenop;
  39   1        SCL = 0;
  40   1        SDA = 1; 
  41   1        somenop;
  42   1      }
  43          
  44          bit IIC_WaitAck(void)
  45          {
  46   1        SDA = 1;
  47   1        somenop;
  48   1        SCL = 1;
  49   1        somenop;
  50   1        if(SDA)    
  51   1        {   
  52   2          SCL = 0;
C51 COMPILER V9.59.0.0   IIC                                                               03/29/2019 21:35:00 PAGE 2   

  53   2          IIC_Stop();
  54   2          return 0;
  55   2        }
  56   1        else  
  57   1        { 
  58   2          SCL = 0;
  59   2          return 1;
  60   2        }
  61   1      }
  62          
  63          void IIC_SendByte(unsigned char byt)
  64          {
  65   1        unsigned char i;
  66   1        for(i=0;i<8;i++)
  67   1        {   
  68   2          if(byt&0x80) 
  69   2          { 
  70   3            SDA = 1;
  71   3          }
  72   2          else 
  73   2          {
  74   3            SDA = 0;
  75   3          }
  76   2          somenop;
  77   2          SCL = 1;
  78   2          byt <<= 1;
  79   2          somenop;
  80   2          SCL = 0;
  81   2        }
  82   1      }
  83          
  84          unsigned char IIC_RecByte(void)
  85          {
  86   1        unsigned char da;
  87   1        unsigned char i;
  88   1        
  89   1        for(i=0;i<8;i++)
  90   1        {   
  91   2          SCL = 1;
  92   2          somenop;
  93   2          da <<= 1;
  94   2          if(SDA) 
  95   2          da |= 0x01;
  96   2          SCL = 0;
  97   2          somenop;
  98   2        }
  99   1        return da;
 100   1      }
 101          
 102          unsigned int Read_AIN(unsigned char chn)
 103          {
 104   1        unsigned int temp_val;
 105   1        unsigned char dat;
 106   1        IIC_Start();              
 107   1        IIC_SendByte(0x90);   
 108   1        IIC_WaitAck();        
 109   1        IIC_SendByte(chn);    
 110   1        IIC_WaitAck();        
 111   1        IIC_Stop();           
 112   1        
 113   1        IIC_Start();                  
 114   1        IIC_SendByte(0x91);   
C51 COMPILER V9.59.0.0   IIC                                                               03/29/2019 21:35:00 PAGE 3   

 115   1        IIC_WaitAck();        
 116   1        dat = IIC_RecByte();        
 117   1        IIC_Ack(0);           
 118   1        IIC_Stop();   
 119   1        temp_val = ((unsigned int)(dat) * (50000 / 255));
 120   1        temp_val /= 100;
 121   1        
 122   1        return temp_val;  
 123   1      }
 124          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    573    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
