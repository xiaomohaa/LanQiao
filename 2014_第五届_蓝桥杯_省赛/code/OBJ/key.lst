C51 COMPILER V9.59.0.0   KEY                                                               03/10/2019 19:53:34 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN ..\OBJ\key.obj
COMPILER INVOKED BY: F:\Keil_v5\C51\BIN\C51.EXE ..\HARDWARE\key.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\INC) DEBUG OB
                    -JECTEXTEND PRINT(..\OBJ\key.lst) TABS(2) OBJECT(..\OBJ\key.obj)

line level    source

   1          #include "sys.h"
   2          
   3          sbit Output0 = P4^4;
   4          sbit Output1 = P4^2;
   5          sbit Output2 = P3^5;
   6          sbit Output3 = P3^4;
   7          sbit Input0 = P3^0;
   8          sbit Input1 = P3^1;
   9          sbit Input2 = P3^2;
  10          sbit Input3 = P3^3;
  11          
  12          u8 code KeyMap[4][4] = {{0, 1, 2, 19},
  13                                  {3, 4, 5, 18}, 
  14                                  {6, 7, 8, 17}, 
  15                                  {9, 0x88, 0x99, 16}};
  16          u8 KeyBuff[4][4] = {{0xff, 0xff, 0xff, 0xff}, {0xff, 0xff, 0xff, 0xff},
  17                            {0xff, 0xff, 0xff, 0xff}, {0xff, 0xff, 0xff, 0xff}};
  18          u8 KeySta[4][4] = {{1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}};
  19          u8 KeyBackup[4][4] = {{1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}};
  20            
  21          
  22          void KeyScan(void)
  23          {
  24   1        static u8 index = 0;
  25   1        u8 i, j;
  26   1        
  27   1        KeyBuff[0][index] = (KeyBuff[0][index] << 1) | Input0;  //第一行
  28   1        KeyBuff[1][index] = (KeyBuff[1][index] << 1) | Input1;  //第二行
  29   1        KeyBuff[2][index] = (KeyBuff[2][index] << 1) | Input2;  //第三行
  30   1        KeyBuff[3][index] = (KeyBuff[3][index] << 1) | Input3;  //第四行
  31   1        
  32   1        index ++;
  33   1        index &= 0x03;
  34   1        switch(index)
  35   1        {
  36   2          case 0: Output3 = 1; Output0 = 0; break;
  37   2          case 1: Output0 = 1; Output1 = 0; break;
  38   2          case 2: Output1 = 1; Output2 = 0; break;
  39   2          case 3: Output2 = 1; Output3 = 0; break;
  40   2        }
  41   1        
  42   1        for(i = 0; i < 4; i++)
  43   1        {
  44   2          for(j = 0; j < 4; j++)
  45   2          {
  46   3            if(KeyBuff[i][j] == 0x00)       //按键按下
  47   3              KeySta[i][j] = 0;
  48   3            else if(KeyBuff[i][j] == 0xff)  //按键松开
  49   3              KeySta[i][j] = 1;
  50   3            else    //按键抖动
  51   3            {}
  52   3          }
  53   2        }
  54   1      }
C51 COMPILER V9.59.0.0   KEY                                                               03/10/2019 19:53:34 PAGE 2   

  55          
  56          void KeyAction(u8 keycode)
  57          {
  58   1        static u8 length = 0;
  59   1        
  60   1        if((keycode >= 0) && (keycode <= 9) && (length < 4) && (flag_option == 1))
  61   1        {
  62   2          temper_range[length] = keycode;
  63   2          
  64   2          length ++;
  65   2          if(length >= 4)
  66   2          {
  67   3            length = 4;
  68   3            temper_low  = temper_range[3] + temper_range[2] * 10;
  69   3            temper_high = temper_range[1] + temper_range[0] * 10;
  70   3            
  71   3            if(temper_low > temper_high)    //检测到错误
  72   3              flag_right = 0;
  73   3          }
  74   2        }
  75   1        else if((keycode == 0x88) && ((length == 0) || (length == 4)) && (temper_low <= temper_high))
  76   1        {   
  77   2          flag_right = 1;
  78   2          if(flag_option == 0)
  79   2          {
  80   3            flag_option = 1;
  81   3            temp_backup[0] = temper_range[0];
  82   3            temp_backup[1] = temper_range[1];
  83   3            temp_backup[2] = temper_range[2];
  84   3            temp_backup[3] = temper_range[3];
  85   3            temper_range[0] = 16;
  86   3            temper_range[1] = 16;
  87   3            temper_range[2] = 16;
  88   3            temper_range[3] = 16;
  89   3            
  90   3            length = 0;
  91   3          }
  92   2          else if(flag_option == 1)
  93   2          {
  94   3            flag_option = 0;
  95   3            temp_backup[0] = temper_range[0];
  96   3            temp_backup[1] = temper_range[1];
  97   3            temp_backup[2] = temper_range[2];
  98   3            temp_backup[3] = temper_range[3];
  99   3          }
 100   2        }
 101   1        else if((keycode == 0x99) && (flag_option == 1))    //清除键
 102   1        {
 103   2          length = 0;
 104   2          temper_range[0] = 16;
 105   2          temper_range[1] = 16;
 106   2          temper_range[2] = 16;
 107   2          temper_range[3] = 16;
 108   2        }
 109   1      }
 110          
 111          
 112          void KeyPress(void)
 113          {
 114   1        u8 i, j;
 115   1        
 116   1        for(i = 0; i < 4; i ++)
C51 COMPILER V9.59.0.0   KEY                                                               03/10/2019 19:53:34 PAGE 3   

 117   1        {
 118   2          for(j = 0; j < 4; j ++)
 119   2          {
 120   3            if(KeyBackup[i][j] != KeySta[i][j])
 121   3            {
 122   4              if(KeySta[i][j] == 0)
 123   4                KeyAction(KeyMap[i][j]);
 124   4              KeyBackup[i][j] = KeySta[i][j];
 125   4            }
 126   3          }
 127   2        }
 128   1      }
 129          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    751    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =     50    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
