C51 COMPILER V9.59.0.0   DS18B20                                                           03/07/2019 18:10:57 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN ..\OBJ\ds18b20.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\HARDWARE\ds18b20.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\INC) DEBUG OBJE
                    -CTEXTEND PRINT(..\OBJ\ds18b20.lst) TABS(2) OBJECT(..\OBJ\ds18b20.obj)

line level    source

   1           #include "sys.h"
   2          
   3          sbit DS18B20_IO = P1^4;
   4          
   5          /*******************************************************************************
   6          * 函数名  ：Delayus
   7          * 输入值  ：unsigned int us
   8          * 返回值  ：none
   9          * 作者    ：小默haa
  10          * 时间    ：2019年2月17日
  11          * 功能描述：1T单片机延时指定us
  12          * 备注    ：最大形参65535，即最大延时65ms
  13          *******************************************************************************/
  14          void Delayus(u16 us)
  15          {
  16   1        do{
  17   2          _nop_();
  18   2          _nop_();
  19   2          _nop_();
  20   2          _nop_();
  21   2          _nop_();
  22   2          _nop_();
  23   2          _nop_();
  24   2          _nop_();
  25   2        }while(--us);
  26   1      }
  27          
  28          /*******************************************************************************
  29          * 函数名  ：Get18B20Ack
  30          * 输入值  ：none
  31          * 返回值  ：none
  32          * 作者    ：小默haa
  33          * 时间    ：2019年2月27日
  34          * 功能描述：复位总线，获取18B20存在脉冲，以启动一次读写操作
  35          * 备注    ：
  36          *******************************************************************************/
  37          bit Get18B20Ack(void)
  38          {
  39   1        bit ack;
  40   1        
  41   1        DS18B20_IO = 0;     //产生500us的复位脉冲
  42   1        Delayus(500);
  43   1      //  EA = 0;             //禁止总中断
  44   1        DS18B20_IO = 1;     //延时60us
  45   1        Delayus(60);
  46   1      //  EA = 1;             //重新使能总中断
  47   1        ack = DS18B20_IO;   //读取存在脉冲
  48   1        while(!DS18B20_IO); //等待存在脉冲结束
  49   1        
  50   1        return ack;   
  51   1      }
  52          
  53          /*******************************************************************************
  54          * 函数名  ：DS18B20Write
C51 COMPILER V9.59.0.0   DS18B20                                                           03/07/2019 18:10:57 PAGE 2   

  55          * 输入值  ：unsigned char dat
  56          * 返回值  ：none
  57          * 作者    ：小默haa
  58          * 时间    ：2019年2月27日
  59          * 功能描述：向18B20写入一个字节
  60          * 备注    ：dat为待写入字节
  61          *******************************************************************************/
  62          void DS18B20Write(unsigned char dat)
  63          {
  64   1        unsigned char mask;
  65   1                  
  66   1        for(mask = 0x01; mask != 0; mask <<= 1) //低位在先，依次移出8个bit
  67   1        {
  68   2          EA = 0;
  69   2          DS18B20_IO = 0;       //产生2us低电平脉冲
  70   2          Delayus(2);
  71   2          if(dat & mask)        //输出该bit值
  72   2            DS18B20_IO = 1;
  73   2          else
  74   2            DS18B20_IO = 0;
  75   2          EA = 1;
  76   2          Delayus(60);          //延时60us
  77   2          DS18B20_IO = 1;       //拉高通信引脚
  78   2        }
  79   1      }
  80          
  81          /*******************************************************************************
  82          * 函数名  ：DS18B20Read
  83          * 输入值  ：none
  84          * 返回值  ：unsigend char dat
  85          * 作者    ：小默haa
  86          * 时间    ：2019年2月27日
  87          * 功能描述：从18B20读取一个字节
  88          * 备注    ：返回值为读取到的字节
  89          *******************************************************************************/
  90          unsigned char DS18B20Read(void)
  91          {
  92   1        unsigned char mask, dat = 0;
  93   1        
  94   1        for(mask = 0x01; mask != 0; mask <<= 1) //低位在先，依次采集8个bit
  95   1        {
  96   2          EA = 0;
  97   2          DS18B20_IO = 0;       //产生2us低电平脉冲
  98   2          Delayus(2);
  99   2          DS18B20_IO = 1;       //结束低电平脉冲，等待18B20输出数据
 100   2          Delayus(2);           //延时2us
 101   2          EA = 1;
 102   2          if(DS18B20_IO)        //读取通信引脚上的值
 103   2            dat |= mask;
 104   2          Delayus(60);          //再延时60us
 105   2        }
 106   1        
 107   1        return dat; 
 108   1      }
 109          
 110          /*******************************************************************************
 111          * 函数名  ：Start18B20
 112          * 输入值  ：none
 113          * 返回值  ：bit ~ack
 114          * 作者    ：小默haa
 115          * 时间    ：2019年2月27日
 116          * 功能描述：启动一次18B20温度转换
C51 COMPILER V9.59.0.0   DS18B20                                                           03/07/2019 18:10:57 PAGE 3   

 117          * 备注    ：返回值为是否启动成功
 118          *******************************************************************************/
 119          bit Start18B20()
 120          {
 121   1        bit ack;
 122   1        static bit flag = 1;
 123   1      
 124   1        ack = Get18B20Ack();    //执行总线复位，并获取18B20应答
 125   1        if(ack == 0)            //如18B20正确应答，则启动一次转换
 126   1        {
 127   2          DS18B20Write(0xCC);   //跳过ROM操作
 128   2          
 129   2          if(flag)
 130   2          {
 131   3            flag = 0;
 132   3            DS18B20Write(0x4e);     //写暂存器指令4E
 133   3            DS18B20Write(0x4b);     //写高速缓存器TH高温限值75度
 134   3            DS18B20Write(0x00);     //写高速缓存器TL低温限值0度
 135   3            DS18B20Write(0x1f);     //写配置寄存器4
 136   3                                    //0x1f ： 0.5000°C  转换时间93.75ms
 137   3                                    //0x3f ： 0.2000°C  转换时间187.5ms
 138   3                                    //0x5f ： 0.1250°C  转换时间375ms
 139   3                                    //0x7f ： 0.0625°C  转换时间750ms
 140   3          }
 141   2          
 142   2          ack = Get18B20Ack();    //执行总线复位，并获取18B20应答
 143   2          if(ack == 0)            //如18B20正确应答，则启动一次转换
 144   2          {
 145   3            DS18B20Write(0xCC);   //跳过ROM操作
 146   3            DS18B20Write(0x44);   //启动一次温度转换
 147   3          }
 148   2        }
 149   1      
 150   1        return ~ack;            //ack == 0 表示操作成功，所以返回值对其取反
 151   1      }
 152          
 153          /*******************************************************************************
 154          * 函数名  ：Get18B20Temp
 155          * 输入值  ：int *temp
 156          * 返回值  ：bit ~ack
 157          * 作者    ：小默haa
 158          * 时间    ：2019年2月27日
 159          * 功能描述：读取18B20转换的温度值
 160          * 备注    ：返回值为是否读取成功
 161          *******************************************************************************/
 162          bit Get18B20Temp(int *temp)
 163          {
 164   1        bit ack;
 165   1        unsigned char LSB, MSB;     //16bit温度值的低字节和高字节
 166   1      
 167   1        ack = Get18B20Ack();        //执行总线复位，并获取18B20应答
 168   1        if(ack == 0)                //如18B20正确应答，则读取温度值
 169   1        {
 170   2          DS18B20Write(0xCC);       //跳过ROM操作
 171   2          DS18B20Write(0xBE);       //发送读命令
 172   2          LSB = DS18B20Read();      //读温度值的低字节
 173   2          MSB = DS18B20Read();      //读温度值的高字节
 174   2          *temp = ( MSB << 8) + LSB;  //合成16bit的整数
 175   2        }
 176   1      
 177   1        return ~ack;                //ack == 0 表示操作应答，所以返回值为1其取反值
 178   1      } 
C51 COMPILER V9.59.0.0   DS18B20                                                           03/07/2019 18:10:57 PAGE 4   

 179          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    236    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       3
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
