C51 COMPILER V9.59.0.0   KEY                                                               03/07/2019 18:10:58 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN ..\OBJ\key.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\HARDWARE\key.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\INC) DEBUG OBJECTEX
                    -TEND PRINT(..\OBJ\key.lst) TABS(2) OBJECT(..\OBJ\key.obj)

line level    source

   1          #include "sys.h"
   2          
   3          u8 time_index = 0, alarm_index = 3;
   4          
   5          u8 KeySta[] = {1, 1, 1, 1};   //键值
   6          u8 Keybackup[] = {1, 1, 1, 1};    //键值备份
   7          u8 Keybuff[] = {0xff, 0xff, 0xff, 0xff};
   8          
   9          //按键扫描
  10          void KeyScan(void)
  11          {
  12   1        u8 i;
  13   1        
  14   1        Keybuff[0] = (Keybuff[0] << 1) | S7;
  15   1        Keybuff[1] = (Keybuff[1] << 1) | S6;
  16   1        Keybuff[2] = (Keybuff[2] << 1) | S5;
  17   1        Keybuff[3] = (Keybuff[3] << 1) | S4;
  18   1        
  19   1        for(i = 0; i < 4; i ++)
  20   1        {
  21   2          if(Keybuff[i] == 0xff)
  22   2            KeySta[i] = 1;
  23   2          else if(Keybuff[i] == 0x00)
  24   2            KeySta[i] = 0;
  25   2          else
  26   2          {}
  27   2        }
  28   1      }
  29          
  30          //检测按键是否按下
  31          void KeyPress(void)
  32          {
  33   1        u8 i;
  34   1        
  35   1        for(i = 0; i < 4; i++)
  36   1        {
  37   2          if(Keybackup[i] != KeySta[i])
  38   2          {
  39   3            if(KeySta[i] == 0)      //按键按下时执行操作
  40   3              KeyAction(i);
  41   3            Keybackup[i] = KeySta[i];
  42   3          }
  43   2        }
  44   1      }
  45          
  46          //按键驱动
  47          void KeyAction(u8 key)
  48          {
  49   1        if(flag_led == 0)
  50   1        {
  51   2          if((key == 0) && (mode == 0))     //S7
  52   2          {
  53   3            if(mode == 0)
  54   3            {
C51 COMPILER V9.59.0.0   KEY                                                               03/07/2019 18:10:58 PAGE 2   

  55   4              mode = 1;       //设置模式1
  56   4              time_index = 0;
  57   4            }
  58   3            time_index ++;
  59   3            if(time_index >= 4)
  60   3            {
  61   4              Updatatime(&bufTime);           //设置完更新时间
  62   4              InitDS1302(&bufTime);
  63   4              mode = 0;
  64   4            }
  65   3          }
  66   2          
  67   2          else if((key == 1) && (mode == 0))  //S6
  68   2          {
  69   3            if(mode == 0)
  70   3            {
  71   4              mode = 2;     //设置模式2
  72   4              alarm_index = 3;
  73   4            }
  74   3            alarm_index ++;
  75   3            if(alarm_index >= 7)
  76   3            {
  77   4              Updatatime(&bufTime);           //设置完更新时间
  78   4              InitDS1302(&bufTime);
  79   4              mode = 0;
  80   4            }
  81   3          }
  82   2          
  83   2          else if((key == 2) && (mode > 0))   //加
  84   2          {
  85   3            time_index --;
  86   3            alarm_index --;
  87   3            if(mode == 1)
  88   3            {
  89   4              OptionTime[time_index] ++;
  90   4              
  91   4              if(time_index == 0)
  92   4              {
  93   5                if(OptionTime[time_index] >= 24)    //小时上限
  94   5                  OptionTime[time_index] = 0;
  95   5              }
  96   4              else
  97   4              {
  98   5                if(OptionTime[time_index] >= 60)    //分秒上限
  99   5                  OptionTime[time_index] = 0;
 100   5              }
 101   4            }
 102   3            else if(mode == 2)
 103   3            {
 104   4              OptionTime[alarm_index] ++;
 105   4              
 106   4              if(alarm_index == 3)
 107   4              {
 108   5                if(OptionTime[alarm_index] >= 24)   //小时上限
 109   5                  OptionTime[alarm_index] = 0;
 110   5              }
 111   4              else
 112   4              {
 113   5                if(OptionTime[alarm_index] >= 60)   //分秒上限
 114   5                  OptionTime[alarm_index] = 0;
 115   5              }
 116   4            }
C51 COMPILER V9.59.0.0   KEY                                                               03/07/2019 18:10:58 PAGE 3   

 117   3            time_index ++;
 118   3            alarm_index ++;
 119   3          }
 120   2          
 121   2          else if((key == 3) && (mode > 0))       //减
 122   2          {
 123   3            time_index --;
 124   3            alarm_index --;
 125   3            if(mode == 1)
 126   3            {
 127   4              OptionTime[time_index] --;
 128   4              
 129   4              if(time_index == 0)
 130   4              {
 131   5                if(OptionTime[time_index] < 0)    //小时下限
 132   5                  OptionTime[time_index] = 23;
 133   5              }
 134   4              else
 135   4              {
 136   5                if(OptionTime[time_index] < 0)    //分秒下限
 137   5                  OptionTime[time_index] = 59;
 138   5              }
 139   4            }
 140   3            else if(mode == 2)
 141   3            {
 142   4              OptionTime[alarm_index] --;
 143   4              
 144   4              if(alarm_index == 3)
 145   4              {
 146   5                if(OptionTime[alarm_index] < 0)   //小时下限
 147   5                  OptionTime[alarm_index] = 23;
 148   5              }
 149   4              else
 150   4              {
 151   5                if(OptionTime[alarm_index] < 0)   //分秒下限
 152   5                  OptionTime[alarm_index] = 59;
 153   5              }
 154   4            }
 155   3            time_index ++;
 156   3            alarm_index ++;
 157   3          }
 158   2        }
 159   1        else if(flag_led == 1)
 160   1        {
 161   2          if(++key)
 162   2          {
 163   3            flag_led = 0;
 164   3            flag_alarm = 0;
 165   3          }
 166   2        }
 167   1      }
 168          
 169          //时间备份
 170          void TimeBackup(u8 *time)
 171          {
 172   1        OptionTime[0] = BCDToNum(time[3]);
 173   1        OptionTime[1] = BCDToNum(time[4]);
 174   1        OptionTime[2] = BCDToNum(time[5]);
 175   1        
 176   1        OptionTime[3] = AlarmTime[0];
 177   1        OptionTime[4] = AlarmTime[1];
 178   1        OptionTime[5] = AlarmTime[2];
C51 COMPILER V9.59.0.0   KEY                                                               03/07/2019 18:10:58 PAGE 4   

 179   1        
 180   1      }
 181          
 182          //更新时间
 183          void Updatatime(u8 *time)
 184          {
 185   1        time[3] = NumToBCD(OptionTime[0]);
 186   1        time[4] = NumToBCD(OptionTime[1]);
 187   1        time[5] = NumToBCD(OptionTime[2]);
 188   1      
 189   1        AlarmTime[0] = OptionTime[3];
 190   1        AlarmTime[1] = OptionTime[4];
 191   1        AlarmTime[2] = OptionTime[5];
 192   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    738    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
